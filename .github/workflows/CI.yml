name: CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Ensure 'cargo fmt'
      run: cargo fmt -- --check
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose
    - name: Run example - simple_speedtest
      run: cargo run --example simple_speedtest
    - name: Run example - download_test
      run: cargo run --example download_test
    - name: Run example - latency_test
      run: cargo run --example latency_test
    - name: Run CLI
      run: cargo run

  docker-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Set up Docker Buildx cache
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Build Docker image for amd64
        uses: docker/build-push-action@v5
        with:
          platforms: linux/amd64
          push: false
          tags: |
            cybuerg/cfspeedtest:${{ github.sha }}-amd64
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          outputs: type=docker,dest=/tmp/docker-image-amd64.tar
          
      - name: Build Docker image for arm64
        uses: docker/build-push-action@v5
        with:
          platforms: linux/arm64
          push: false
          tags: |
            cybuerg/cfspeedtest:${{ github.sha }}-arm64
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          outputs: type=docker,dest=/tmp/docker-image-arm64.tar
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
      - name: Upload Docker images as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: docker-images
          path: |
            /tmp/docker-image-amd64.tar
            /tmp/docker-image-arm64.tar
          retention-days: 1

  verify-docker-image:
    needs: docker-build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]
    steps:
      - name: Download Docker images
        uses: actions/download-artifact@v4
        with:
          name: docker-images
          path: /tmp
      - name: Load Docker image
        run: |
          if [ "${{ matrix.platform }}" = "linux/amd64" ]; then
            docker load < /tmp/docker-image-amd64.tar
          else
            docker load < /tmp/docker-image-arm64.tar
          fi
      - name: Verify amd64 image
        if: matrix.platform == 'linux/amd64'
        run: |
          docker run cybuerg/cfspeedtest:${{ github.sha }}-amd64 --help
          docker run --entrypoint /bin/sh cybuerg/cfspeedtest:${{ github.sha }}-amd64 -c "file /usr/local/bin/cfspeedtest" | grep "x86-64"
      - name: Set up QEMU
        if: matrix.platform == 'linux/arm64'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64
          
      - name: Verify arm64 image
        if: matrix.platform == 'linux/arm64'
        run: |
          docker run --platform linux/arm64 cybuerg/cfspeedtest:${{ github.sha }}-arm64 --help
          docker run --platform linux/arm64 --entrypoint /bin/sh cybuerg/cfspeedtest:${{ github.sha }}-arm64 -c "file /usr/local/bin/cfspeedtest" | grep "aarch64"
